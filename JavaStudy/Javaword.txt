■ 開発
・ウォーターフォール開発
  システムの開発を「基本計画」「外部設計」「内部設計」「プログラム設計」「プログラミング」「テスト」という工程に分けて順に段階を経て行う方法
  プロジェクト全体のスケジュールを立てやすい、進捗が管理しやすい等のメリットがある
  一方、仕様変更に対応しにくく、手戻りが発生した場合には各工程をさかのぼってやり直さなくてはいけない
  成果物の作成に時間がかかる等のデメリットがある

・アジャイル開発
  計画→設計→実装→テストとうい開発工程を機能単位の小さいサイクルで繰り返す開発方法
  開発期間が短縮されるため、アジャイル（素早い）と呼ばれている
  仕様変更に強く、手戻りの行程が、少ない。
  計画段階で綿密な仕様を決めないため、開発途中でユーザーとコミュニケーションを取りながらフィードバックを行い、
  確認をしながら進められる。
  一方、開発の方向性がブレやすい、スケジュールや進捗の管理がしにくいというデメリットがある

・デグレーション
  新しいバージョンのソフトウェアの品質が、以前より悪くなること
  以前修正した不具合やバグが再発・復活すること

・デプロイ
  開発したソフトウェアを実際の運用環境に配置・展開して使えるようにすること

・コンフリクト
  複数人で開発する際に、同じファイルを同時に編集してしまい、競合が起きている状態


・環境
  ある装置やソフトウェアにとって、それが導入されるコンピュータのハードウェアの構成や設定、OSなどソフトウェアの構成や設定、および、それら全体の組み合わせのこと

  ・開発環境（ローカル）
    実際のサーバーにアップする前に、サイトの動作や表示確認を手持ちのパソコン内で行うこと

  ・検証環境（ステージング）
    本番環境でしっかり動作するかの試験を実施するための環境

  ・本番環境
    できあがったシステムやサービスが実際に動く環境

・設計書／仕様書
  設計書は構築方法を文章化した資料
  仕様書は何を構築するか説明した資料

  ・要件定義
    クライアントの要望と、その要望をどのように叶えるのかを文章としてまとめたもの
    
  ・基本設計書
    ソフトウェアの動きを外から見た際に"どういう動きをするのか"を決めたもの

  ・詳細設計書
    基本設計で決められた動きを"どうやって実現するか"を決めたもの

・テスト
  できる限りバグをつぶし、仕様どおりに動くことを確かめてからリリース（納品）するために
  事前に動作をチェックすること

  ・単体テスト（UT）
    テスト工程で初めにやるもの
    関数やメソッドといった小さい単位でテストし1つ1つの処理が正しく機能しているかを確認する

  ・結合テスト（CT／IT）
    ある機能を実現するためのシステムを組み合わせて動かしたときに意図した結果が返ってくるか、
    データの受け渡しが正しくされるか、データを受け渡すタイミングはずれていないかなどを確認する

  ・総合テスト（ST）
    開発したシステムが全体を通して意図したとおりに動作するか、仕様書通りの機能を実現できているか、
    性能要件を満たしているかなどを確認する

・エビデンス／証跡
  システム開発のテスト工程などで、システムが正しく動作している、あるいは不具合が生じたことを示す証拠となる
  書類やデータなどのこと

・データパッチ
  プログラムの一部分を更新してバグ修正や機能変更を行うためのデータのこと
  ソフトに変更を加える後付プログラム

・Access
  機器やソフトウェア、システム、情報などを利用（操作、取得、閲覧、読み書きなど）可能な状態にすること

・マクロ
  関連する複数の操作や手順、命令などを一つにまとめ、必要に応じて呼び出すことができるようにする機能のこと

  ・VBA
    Microsoft Officeに含まれるアプリケーションソフトの拡張機能で、利用者が簡易なプログラムを記述して実行することで複雑な処理の自動化などを行なうことができるもの

・GAS（Google Apps Script）
  Googleが提供するプログラミング言語でGoogleマップやGメールなどGoogle関連サービスを自由に連携したり、
  独自のWebアプリを開発することもできる

・API
  ソフトウェアやアプリケーションなどの一部を外部に向けて公開することにより、第三者が開発したソフトウェアと機能を共有できるようにしてくれるもの

  ・WEB API
   API提供者とAPI利用者とのやりとりをHTTP／HTTPSベースで実現するAPI

  ・REST API
  RESTの考え方をWeb APIに適用したもの
  URI(HTTPのパス)が名詞形であること、URI(HTTPのパス)が名詞形であること、
  レスポンス形式がjsonもしくはXMLであることが特徴

  ・SOAP
  異なるコンピュータ上で動作するプログラム同士がネットワークを通じてメッセージを伝え合い、連携して動作するための通信プロトコル(規約)の一つ

・Ajax
  ウェブブラウザ内で非同期通信を行いながらインターフェイスの構築を行うプログラミング手法

  ・XML
  htmlと同じマークアップ言語だが、xmlはタグをユーザーが自由に決定できるなど、自由度が高く、
  データの構造もカスタマイズできる

  ・JSON
  JavaScript Object Notationの略でXMLなどと同様のテキストベースのデータフォーマット
  ネットワークを通してデータを転送したい場合に便利

  ・ステータスコード
  HTTPステータスコード（HTTP Status Code）とも呼ばれる、HTMLを表示する前にブラウザが受信する100~510までの3桁の番号
  この3桁の数値を「HTMLを受信する前に」受信することで、ブラウザは正しい処理ができるようになる

  ・クロスオリジン（Cross-Origin）／CORS（Cross-Origin Resource Sharing）
  Webページ上の制限されたリソースを、最初のリソースが提供されたドメイン外の別のドメインからリクエストできるようにするメカニズム
  違うオリジンからのアクセスを許可する仕組み

・バリデーション
  入力内容や記述内容が要件を満たしているか、妥当性を確認するもの

・データ連携
  アプリケーション、システム、格納先がそれぞれ異なるデータを、垣根を超えて共有・活用すること、またはそのための技術・プロセスのこと

  ・Daemon
  UNIX系OSでコンピューターのメモリに常駐し、サーバーのプログラムやシステムの要求に応じて自動的にサービスを提供するバックグランドシステム

  ・CRON
  UNIX系システム(Unix OS、Linux OS)で使用されるジョブを自動実行するスケジューラー
   ユーザーが設定したスケジュールに基づいて一定時間毎に指定したコマンド、シェルスクリプトやプログラムを自動実行させることが出来る
  
  ・バッチ
  あらかじめ登録した一連の処理を自動的に実行する処理方式を指す

  ・ログ
  起こった出来事についての情報などを一定の形式で時系列に記録・蓄積したデータのこと

  ・CSV
  テキスト（文字）データの形式の一つで、項目をカンマ「,」で区切って列挙したもの

  ・TSV
  文字や文字列の間にタブ記号を挿入して区切りを設けること、あるいは、そのようにして各データを区切って管理するファイル形式のこと
  
・プルリクエスト（マージリクエスト）
  コードの変更をレビュワーに通知し、マージを依頼する機能
  コードのレビューを受けることで、1人で作ると気がつかないコードの指摘やバグや記述ミスの発見ができ、コードの品質を高める

■ チケット管理ツール
・asana
ワークマネジメントツールで、リスト形式・カンバン方式のどちらかを選択してプロジェクトを管理できる

・Backlog
株式会社ヌーラボが提供するプロジェクト管理ツール
タスクの内容・担当者・期日が明確になり、作業のし忘れ、スケジュールの遅れなどを削減できる

・Jooto
株式会社PR TIMESが提供している、クラウド型のプロジェクト・タスク管理ツール

・Readmine
  Webベースのプロジェクト管理ソフトウェア
  RedmineではSubversionやGitと連携し、ソースコードの改変とタスクを紐づけて管理することができる

・Trello
  タスク管理ツール
  Fog Creek Softwareが2011年に開発したウェブアプリケーション


■ バージョン管理
・集中型
  ひとつのリポジトリに接続してみんなで使う
  CVS・Subversionなどがある

・分散型
  各自、個人のパソコン上にリポジトリを持ち、好きなタイミングで好きなリポジトリに同期する
  Git・Mercurialなどがある

・Github
Gitの仕組みを利用して、世界中の人々が自分の作品(プログラムコードやデザインデータなど)を保存、公開することができるようにしたウェブサービスの名称

・Backlog
  株式会社ヌーラボが提供するプロジェクト管理ツール
  タスクの内容・担当者・期日が明確になり、作業のし忘れ、スケジュールの遅れなどを削減できる

・SourceTree
  オーストラリアのAtlassian社が提供している無料のGitクライアントソフトウェアでGUIを備えているので操作が簡単

・Tortoise SVN
  バージョン管理システムであるSubversionのクライアントフロントエンド。GNU General Public Licenseのもとに配布されているフリーソフトウェア

・Git Flow
  チームで Git を使う際に役立つ、運用ルールをまとめたツール（プラグイン）

  ・master
    デフォルトのブランチの名前。メインのブランチ

  ・release
  最新のdevelopブランチから、リリースブランチを作成し、必要な変更を行った後にmasterブランチにMergeし、Tagを付与する

  ・develop
  開発の主軸になるブランチ。masterブランチから派生させる。
  developブランチからfeatureブランチやreleaseブランチを切る。

    ・feature
    主要な機能を実装するためのブランチ。機能の実装やバグフィックスなど、タスクごとにfeatureブランチを作成し、作業を行う

■ FW／ライブラリ
・FW
  ファイアウォールのことで、ネットワークの境界に設置され、内外の通信を中継・監視し、
  外部の攻撃から内部を保護するためのソフトウェアや機器、システムなどのこと

  ・Spring Framework
    Java言語によるソフトウェア開発を支援するフレームワークの一つ
    特徴として、AOPとDIと呼ばれる概念で構築されていること、専用のテストプログラムがあることなどが挙げられる

  ・Struts
  Apache Software Foundationによって開発されているオープンソースのWebアプリケーションフレームワークの名称
  Java Servlet や JSP の技術を用いて、Web アプリケーションを構築する上で有用な、オープンソースフレームワーク

  ・JSF（Java Server Faces）
   JavaベースのWebアプリケーションフレームワーク
   文字入力のためのテキストフィールド
   送信、キャンセルなどのボタン
  複数の選択肢の中から選べるセレクトボックス等を表現できる

・ライブラリ
  便利なプログラムを再利用可能な形でひとまとまりにしたもの

  ・Bootstrap
    Twitter社で開発されたフレームワーク
    再利用性の高いWebパーツや各レイアウトのデザインを整える機能を豊富に備えているため、CSSのコードを一から組むことなくWebサイトのデザインを進められる

  ・Flyway
    オープンソースのデータベースマイグレーションツール
    データベースの状態をバージョン管理できるようになる

  ・Jackson
    javaのライブラリで、JSONオブジェクトをJavaオブジェクトにマップしたりその逆を行うことができる

  ・jQuery
    Webブラウザ上で動作するJavaScriptライブラリの一つ。ブラウザの種類に依らず簡潔な記述で豊富な機能を活用することができる

  ・Junit
    、Java言語で開発されたプログラムの単体テスト（ユニットテスト）を行なうためのソフトウェア

  ・Log4j
    もっとも代表的なjavaのログ出力実装ライブラリ


  ・Lombok
  MITライセンスで作られた、Java特有のボイラープレートコード（言語仕様上省くことのできない定期的なコード）を解消するためのライブラリ


  ・ORM
  オブジェクト関係マッピング
  データベースとオブジェクト指向プログラミング言語の間の非互換なデータを変換するプログラミング技法

■ 連絡ツール
・ChatWork
  ビジネス利用に特化したマルチデバイスのコミュニケーションツール
  チャットだけでなく、タスクの作成・管理やファイル管理、ユーザー管理、ユーザーや端末に応じた機能制限など、
  業務効率化や情報漏洩リスクに対応する各種機能が揃っている点も特徴

・Slack
  スチュワート・バターフィールドによって開発されたチームコミュニケーションツール


・IP Messenger
   LAN 用メッセンジャーソフトで、同じネットワーク内のメンバーを自動認識し、
   簡単にクライアント同士がリアルタイムに情報交換できる優れたソフトウェア

■ Java
・Javadoc
  ソースコードの内容から自動判定したり特定の書式で書かれたコメントを抜き出すことによって自動作成された、ホームページっぽい形式になっているJavaのソースコードの説明書

・アノテーション
  実行環境やコンパイラに対して指示するための機能

・メモリ管理
  コンピュータのメモリを管理するもの
  
  ・ヒープ
    OSやアプリケーションソフトが使用するメモリ領域の一種で用途に関係なく自由に確保することができる
    動的メモリ用の領域

  ・GC
    コンピュータプログラムが動的に確保したメモリ領域のうち、不要になった領域を自動的に解放する機能

・GoF
  ”The Gang Of Four（4人の奴等）”の略であり、エリック・ガンマ、リチャード・ヘルム、ラルフ・ジョンソン、ジョン・ブリシディースの4人を指している
  GoFによるデザインパターンは、多数のソフトウェアパターンの中で最も広く知られているもの

・デザインパターン
  JavaやRubyなどのオブジェクト指向の言語で使われる設計パターンのこと


■ その他
・オブジェクト指向
  プログラムを手順ではなくて、モノの作成と操作として見る考え方
  作りたいもの（オブジェクト）を、一つ一つの部品に分けて作っていくこと

・バッチ処理
  一定量の(あるいは一定期間の)データを集め、一括処理するための処理方法

・コンパイル
  プログラミング言語で書かれた文字列をコンピュータ上で実行可能な形式に変換すること

・カバレッジ
  出来上がったプログラムのテストをする際に、どの程度をテスト対象とする（ことができる）かをカバレッジ（テストカバレッジ）という

・プラットホーム
  システムやサービスの土台や基盤となる環境のこと
